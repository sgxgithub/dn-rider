#############################
#######  API Save  ##########
#############################

# get parameters
get params (app, version, releaseType, repositoryId)

# validation parameters niveau 1
SI version pas fourni :
    return error 400
SI releaseType fourni et pas dans ('releases'|'snapshots') :
      return error 400

# consolidation parameters
SI !releaseType :
  SI version contains 'SNAPSHOT' ( à voir s'il faut faire une function individuel) :
      releaseType = 'snapshots'
  SINON :
      releaseType = 'releases'

# check
SI repo fourni :
    verifier existence du repo (dans la liste de tous les repos) et extraire son type
    SI repo inexistant :
      return error 404

    SI repo pas conforme au releaseType :
      return error 400
SINON :
    chercher les repos pour l'application
    SELON nb de repo trouvé pour le releasetype :
      0 ) return error 400
      1 ) repositoryId = repositoryIds[0]
      + ) return error 400

SI releaseType==release :
  check object avec version deja present
  SI version presente:
     return error 403

# save
Do save
SI error :
    nexus ne repond pas : 503
    pas le droit dans un Maven SNAPSHOT repository : 405
    nexus repond une erreur HTTP (reprendre code de Nexus)
SINON :
    return success 201

#############################
#######  API Delete  ########
#############################

# get parameters
get params (app, version)

# consolidation parameters
SI version contains 'SNAPSHOT' ( à voir s'il faut faire une function individuel) :
    releaseType = 'snapshots'
SINON :
    releaseType = 'releases'

# chercher repo
chercher les repos pour l'application avec app, releaseType et version

SELON nb de repo trouvé :
  0 ) return error 400
  + ) repositoryId = repositoryIds[0]

# delete
Do delete :
    delete json
    delete pom if exist ??
    rebuild metadata ??
Code delete json :
    404 : 404, dn not found
    204 :  success 200
    SINON :400 failed
